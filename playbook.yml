- hosts: vmhosts
  tasks:
    - name: Virtualization group installed
      dnf:
        name: "@virtualization"
        state: latest

    - name: /etc/libvirt/qemu.conf allows evdev passthrough
      blockinfile:
        path: /etc/libvirt/qemu.conf
        block: |
          cgroup_device_acl = [
            "/dev/input/event3", "/dev/input/event4",
            "/dev/input/event5" , "/dev/input/event6",
            "/dev/null", "/dev/full", "/dev/zero",
            "/dev/random", "/dev/urandom",
            "/dev/ptmx", "/dev/kvm",
            "/dev/rtc","/dev/hpet"
          ]


    - name: libvirtd running
      systemd:
        name: libvirtd
        state: started
        enabled: yes

    - name: pulseaudio installed
      dnf:
        name: pulseaudio
        state: latest

    - name: qemu in pulse-access, input groups
      user:
        name: qemu
        append: yes
        groups: pulse-access,input
     
    - name: pulse in audio group
      user:
        name: pulse
        append: yes
        groups: audio

    - name: symlink /etc/pulse/system.pa -> /etc/pulse/default.pa
      file:
        src: /etc/pulse/default.pa
        dest: /etc/pulse/system.pa
        state: link
        force: yes

    - name: /etc/pulse/default.pa sets up /tmp/pulse-socket
      lineinfile:
        path: /etc/pulse/default.pa
        state: present
        regex: "^load-module module-native-protocol-unix"
        line: load-module module-native-protocol-unix auth-group-enable=true auth-group=pulse-access socket=/tmp/pulse-socket

    - name: /etc/pulse/client.conf has default server
      lineinfile:
        path: /etc/pulse/client.conf
        state: present
        regex: "^; default-server ="
        line: default-server = unix:/tmp/pulse-socket

    - name: pulseaudio systemd unit in place
      copy:
        src: files/pulseaudio.service
        dest: /etc/systemd/system/pulseaudio.service

    - name: pulseaudio running
      systemd:
        name: pulseaudio
        state: started
        enabled: yes

    - name: /etc/default/grub enables iommu
      lineinfile:
        path: /etc/default/grub
        state: present
        regex: "^GRUB_CMDLINE_LINUX_DEFAULT="
        line: GRUB_CMDLINE_LINUX_DEFAULT="intel_iommu=on iommu=pt"
      notify: rebuild grub

    - name: vfio is loaded
      blockinfile:
        create: yes
        path: /etc/modules-load.d/vfio.conf
        block: |
          vfio
          vfio_pci
          vfio_iommu_type1
          vfio_virqfd

    - name: python3-lxml installed for virt_net
      dnf:
        name: python3-lxml
        state: latest

    - name: default virt-net is removed
      virt_net:
        name: default
        state: absent

    - name: OVS0 virt-net exists     
      virt_net:
        name: OVS0
        state: present
        command: modify
        xml: "<network>
                  <name>OVS0</name>
                  <forward mode='bridge' />
                  <bridge name='OVS0' />
                  <virtualport type='openvswitch' />
                  <portgroup name='internal'>
                          <vlan> <tag id='10'/> </vlan>
                  </portgroup>
                  <portgroup name='external'>
                          <vlan> <tag id='20'/> </vlan>
                  </portgroup>
               </network>"

    - name: OVS0 virt-net is autostarted
      virt_net:
        name: OVS0
        autostart: yes

    - name: openvswitch installed
      dnf:
        name: openvswitch
        state: latest

    - name: openvswitch started
      systemd:
        name: openvswitch
        state: started
        enabled: yes

    - name: NetworkManager-ovs installed
      dnf:
        name: NetworkManager-ovs
        state: latest

    - name: NM has ovs-bridge named OVS0
      command: nmcli conn add type ovs-bridge conn.interface OVS0

    ## libvirt expects an interface named OVS0 

    - name: NM has port99 port
      command: nmcli conn add type ovs-port conn.interface port99 master OVS0 

    - name: NM has OVS0 on port99 
      command: nmcli conn add type ovs-interface slave-type ovs-port conn.interface  OVS0 \
               master port99

    ## vlan10 is internal vlan

    - name: NM has port0 tagged with vlan 10
      command: nmcli conn add type ovs-port conn.interface port0 master OVS0 ovs-port.tag 10

    - name: NM has guest-access on port0 
      command: nmcli conn add type ovs-interface slave-type ovs-port conn.interface guest-access \
               master port0 ipv4.method auto

    ## vlan 20 is external vlan and we attach nic to this vlan 
   
    - name: NM has port1 tagged with vlan 20
      command: nmcli conn add type ovs-port conn.interface port1 master OVS0 ovs-port.tag 20

    - name: NM has enp0s31f6 on port1
      command: nmcli conn add type ethernet conn.interface enp0s31f6 ipv4.method disabled master port1  

    - name: pcscd.service disabled
      systemd: 
        state: stopped
        enabled: no
    - name: pcscd.service disabled
        systemd: 
          state: stopped
          enabled: no



  handlers:

    - name: rebuild grub
      command: grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg

